{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/srsses/insurance-cross-selling?scriptVersionId=189965150\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"8a150450","metadata":{"_cell_guid":"dac9cea8-9acb-43ac-aa41-aa934cffd0e0","_uuid":"6927113f-087f-4a41-987e-8b4492b4d2ad","collapsed":false,"execution":{"iopub.execute_input":"2024-07-27T06:45:32.496869Z","iopub.status.busy":"2024-07-27T06:45:32.496486Z","iopub.status.idle":"2024-07-27T06:45:33.239531Z","shell.execute_reply":"2024-07-27T06:45:33.23878Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.755096,"end_time":"2024-07-27T06:45:33.241989","exception":false,"start_time":"2024-07-27T06:45:32.486893","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":2,"id":"114a8077","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:45:33.25991Z","iopub.status.busy":"2024-07-27T06:45:33.259506Z","iopub.status.idle":"2024-07-27T06:46:06.82545Z","shell.execute_reply":"2024-07-27T06:46:06.824544Z"},"papermill":{"duration":33.585296,"end_time":"2024-07-27T06:46:06.835829","exception":false,"start_time":"2024-07-27T06:45:33.250533","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Driving_License</th>\n","      <th>Region_Code</th>\n","      <th>Previously_Insured</th>\n","      <th>Vehicle_Age</th>\n","      <th>Vehicle_Damage</th>\n","      <th>Annual_Premium</th>\n","      <th>Policy_Sales_Channel</th>\n","      <th>Vintage</th>\n","      <th>Response</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Male</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>1-2 Year</td>\n","      <td>Yes</td>\n","      <td>65101.0</td>\n","      <td>124.0</td>\n","      <td>187</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>&gt; 2 Years</td>\n","      <td>Yes</td>\n","      <td>58911.0</td>\n","      <td>26.0</td>\n","      <td>288</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Female</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>&lt; 1 Year</td>\n","      <td>No</td>\n","      <td>38043.0</td>\n","      <td>152.0</td>\n","      <td>254</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Female</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>1-2 Year</td>\n","      <td>Yes</td>\n","      <td>2630.0</td>\n","      <td>156.0</td>\n","      <td>76</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Female</td>\n","      <td>36</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>1</td>\n","      <td>1-2 Year</td>\n","      <td>No</td>\n","      <td>31951.0</td>\n","      <td>152.0</td>\n","      <td>294</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  Gender  Age  Driving_License  Region_Code  Previously_Insured  \\\n","0   0    Male   21                1         35.0                   0   \n","1   1    Male   43                1         28.0                   0   \n","2   2  Female   25                1         14.0                   1   \n","3   3  Female   35                1          1.0                   0   \n","4   4  Female   36                1         15.0                   1   \n","\n","  Vehicle_Age Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Vintage  \\\n","0    1-2 Year            Yes         65101.0                 124.0      187   \n","1   > 2 Years            Yes         58911.0                  26.0      288   \n","2    < 1 Year             No         38043.0                 152.0      254   \n","3    1-2 Year            Yes          2630.0                 156.0       76   \n","4    1-2 Year             No         31951.0                 152.0      294   \n","\n","   Response  \n","0         0  \n","1         1  \n","2         0  \n","3         0  \n","4         0  "]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["train = pd.read_csv(\"/kaggle/input/playground-series-s4e7/train.csv\")\n","test = pd.read_csv(\"/kaggle/input/playground-series-s4e7/test.csv\")\n","train.head()"]},{"cell_type":"code","execution_count":3,"id":"24791ed2","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:06.85317Z","iopub.status.busy":"2024-07-27T06:46:06.852873Z","iopub.status.idle":"2024-07-27T06:46:06.865532Z","shell.execute_reply":"2024-07-27T06:46:06.86475Z"},"papermill":{"duration":0.023559,"end_time":"2024-07-27T06:46:06.867402","exception":false,"start_time":"2024-07-27T06:46:06.843843","status":"completed"},"tags":[]},"outputs":[],"source":["def reduce_mem_usage(df):\n","    \"\"\" iterate through all the columns of a dataframe and modify the data type\n","        to reduce memory usage.        \n","    \"\"\"\n","    start_mem = df.memory_usage().sum() / 1024**2\n","    print('Memory usage of dataframe is {:.2f} MB'.format(start_mem))\n","    \n","    for col in df.columns:\n","        col_type = df[col].dtype\n","        \n","        if col_type != object:\n","            c_min = df[col].min()\n","            c_max = df[col].max()\n","            if str(col_type)[:3] == 'int':\n","                if c_min > np.iinfo(np.int8).min and c_max < np.iinfo(np.int8).max:\n","                    df[col] = df[col].astype(np.int8)\n","                elif c_min > np.iinfo(np.int16).min and c_max < np.iinfo(np.int16).max:\n","                    df[col] = df[col].astype(np.int16)\n","                elif c_min > np.iinfo(np.int32).min and c_max < np.iinfo(np.int32).max:\n","                    df[col] = df[col].astype(np.int32)\n","                elif c_min > np.iinfo(np.int64).min and c_max < np.iinfo(np.int64).max:\n","                    df[col] = df[col].astype(np.int64)  \n","            else:\n","                if c_min > np.finfo(np.float16).min and c_max < np.finfo(np.float16).max:\n","                    df[col] = df[col].astype(np.float16)\n","                elif c_min > np.finfo(np.float32).min and c_max < np.finfo(np.float32).max:\n","                    df[col] = df[col].astype(np.float32)\n","                else:\n","                    df[col] = df[col].astype(np.float64)\n","        else:\n","            df[col] = df[col].astype('category')\n","\n","    end_mem = df.memory_usage().sum() / 1024**2\n","    print('Memory usage after optimization is: {:.2f} MB'.format(end_mem))\n","    print('Decreased by {:.1f}%'.format(100 * (start_mem - end_mem) / start_mem))\n","    \n","    return df"]},{"cell_type":"code","execution_count":4,"id":"e28e7907","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:06.885134Z","iopub.status.busy":"2024-07-27T06:46:06.884241Z","iopub.status.idle":"2024-07-27T06:46:13.202396Z","shell.execute_reply":"2024-07-27T06:46:13.201342Z"},"papermill":{"duration":6.329204,"end_time":"2024-07-27T06:46:13.204574","exception":false,"start_time":"2024-07-27T06:46:06.87537","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Memory usage of dataframe is 1053.30 MB\n","Memory usage after optimization is: 230.41 MB\n","Decreased by 78.1%\n","Memory usage of dataframe is 643.68 MB\n","Memory usage after optimization is: 146.29 MB\n","Decreased by 77.3%\n"]}],"source":["train = reduce_mem_usage(train)\n","test = reduce_mem_usage(test)"]},{"cell_type":"code","execution_count":5,"id":"3ef1c410","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:13.222802Z","iopub.status.busy":"2024-07-27T06:46:13.222525Z","iopub.status.idle":"2024-07-27T06:46:15.757001Z","shell.execute_reply":"2024-07-27T06:46:15.756007Z"},"papermill":{"duration":2.546377,"end_time":"2024-07-27T06:46:15.759512","exception":false,"start_time":"2024-07-27T06:46:13.213135","status":"completed"},"tags":[]},"outputs":[],"source":["train['Driving_License'] = train['Driving_License'].astype(\"object\")\n","train['Region_Code'] = train['Region_Code'].astype(\"object\")\n","train['Previously_Insured'] = train['Previously_Insured'].astype(\"object\")\n","test['Driving_License'] = test['Driving_License'].astype(\"object\")\n","test['Region_Code'] = test['Region_Code'].astype(\"object\")\n","test['Previously_Insured'] = test['Previously_Insured'].astype(\"object\")"]},{"cell_type":"code","execution_count":6,"id":"56762386","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:15.778995Z","iopub.status.busy":"2024-07-27T06:46:15.778264Z","iopub.status.idle":"2024-07-27T06:46:21.220951Z","shell.execute_reply":"2024-07-27T06:46:21.219972Z"},"papermill":{"duration":5.455631,"end_time":"2024-07-27T06:46:21.223621","exception":false,"start_time":"2024-07-27T06:46:15.76799","status":"completed"},"tags":[]},"outputs":[],"source":["train['Age'] = np.where((train['Age']>=20) & (train['Age']<40), 'youth',\\\n","                        np.where((train['Age']>=40) & (train['Age']<60), 'Mid_Age',\\\n","                                 np.where((train['Age']>=60) & (train['Age']<80), 'Senior','Super_Senior')))\n","\n","test['Age'] = np.where((test['Age']>=20) & (test['Age']<40), 'youth',\\\n","                        np.where((test['Age']>=40) & (test['Age']<60), 'Mid_Age',\\\n","                                 np.where((test['Age']>=60) & (test['Age']<80), 'Senior','Super_Senior')))"]},{"cell_type":"code","execution_count":7,"id":"9ce27eab","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:21.243952Z","iopub.status.busy":"2024-07-27T06:46:21.243176Z","iopub.status.idle":"2024-07-27T06:46:22.9096Z","shell.execute_reply":"2024-07-27T06:46:22.908561Z"},"papermill":{"duration":1.678,"end_time":"2024-07-27T06:46:22.911944","exception":false,"start_time":"2024-07-27T06:46:21.233944","status":"completed"},"tags":[]},"outputs":[],"source":["train = train.drop(\"id\", axis = 1)\n","test = test.drop(\"id\", axis = 1)"]},{"cell_type":"code","execution_count":8,"id":"2d858c0a","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:22.93064Z","iopub.status.busy":"2024-07-27T06:46:22.929944Z","iopub.status.idle":"2024-07-27T06:46:23.570102Z","shell.execute_reply":"2024-07-27T06:46:23.569255Z"},"papermill":{"duration":0.651725,"end_time":"2024-07-27T06:46:23.572417","exception":false,"start_time":"2024-07-27T06:46:22.920692","status":"completed"},"tags":[]},"outputs":[],"source":["upper = np.percentile(train['Annual_Premium'],75)\n","lower = np.percentile(train['Annual_Premium'],25)\n","IQR = upper-lower\n","train['Annual_Premium']= np.where(train['Annual_Premium'] >= (1.5*IQR)+upper, upper,\n","                                 np.where(train['Annual_Premium'] <= lower-(1.5*IQR), lower,train['Annual_Premium']))\n","\n","\n","upper_t = np.percentile(test['Annual_Premium'],75)\n","lower_t = np.percentile(test['Annual_Premium'],25)\n","IQR = upper_t-lower_t\n","test['Annual_Premium']= np.where(test['Annual_Premium'] >= (1.5*IQR)+upper_t, upper_t,\n","                                 np.where(test['Annual_Premium'] <= lower_t-(1.5*IQR), lower_t,test['Annual_Premium']))"]},{"cell_type":"code","execution_count":9,"id":"e1678f80","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:23.590563Z","iopub.status.busy":"2024-07-27T06:46:23.589828Z","iopub.status.idle":"2024-07-27T06:46:23.606692Z","shell.execute_reply":"2024-07-27T06:46:23.605712Z"},"papermill":{"duration":0.027902,"end_time":"2024-07-27T06:46:23.608727","exception":false,"start_time":"2024-07-27T06:46:23.580825","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11504798 entries, 0 to 11504797\n","Data columns (total 11 columns):\n"," #   Column                Dtype   \n","---  ------                -----   \n"," 0   Gender                category\n"," 1   Age                   object  \n"," 2   Driving_License       object  \n"," 3   Region_Code           object  \n"," 4   Previously_Insured    object  \n"," 5   Vehicle_Age           category\n"," 6   Vehicle_Damage        category\n"," 7   Annual_Premium        float32 \n"," 8   Policy_Sales_Channel  float16 \n"," 9   Vintage               int16   \n"," 10  Response              int8    \n","dtypes: category(3), float16(1), float32(1), int16(1), int8(1), object(4)\n","memory usage: 482.8+ MB\n"]}],"source":["train.info()"]},{"cell_type":"code","execution_count":10,"id":"b9c903d9","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:23.626801Z","iopub.status.busy":"2024-07-27T06:46:23.6261Z","iopub.status.idle":"2024-07-27T06:46:23.630564Z","shell.execute_reply":"2024-07-27T06:46:23.629867Z"},"papermill":{"duration":0.015421,"end_time":"2024-07-27T06:46:23.632451","exception":false,"start_time":"2024-07-27T06:46:23.61703","status":"completed"},"tags":[]},"outputs":[],"source":["cat_cols = [i for i in train.columns if train[i].dtype == \"object\" or train[i].dtype == \"category\" ]"]},{"cell_type":"code","execution_count":11,"id":"ba5d3abc","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:23.650126Z","iopub.status.busy":"2024-07-27T06:46:23.649853Z","iopub.status.idle":"2024-07-27T06:46:23.655301Z","shell.execute_reply":"2024-07-27T06:46:23.654476Z"},"papermill":{"duration":0.01641,"end_time":"2024-07-27T06:46:23.65715","exception":false,"start_time":"2024-07-27T06:46:23.64074","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["['Gender',\n"," 'Age',\n"," 'Driving_License',\n"," 'Region_Code',\n"," 'Previously_Insured',\n"," 'Vehicle_Age',\n"," 'Vehicle_Damage']"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["cat_cols"]},{"cell_type":"code","execution_count":12,"id":"1b017478","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:23.675464Z","iopub.status.busy":"2024-07-27T06:46:23.675191Z","iopub.status.idle":"2024-07-27T06:46:41.777992Z","shell.execute_reply":"2024-07-27T06:46:41.776949Z"},"papermill":{"duration":18.11458,"end_time":"2024-07-27T06:46:41.780501","exception":false,"start_time":"2024-07-27T06:46:23.665921","status":"completed"},"tags":[]},"outputs":[],"source":["for col in cat_cols:\n","    if col == 'Target':\n","        continue\n","    else:\n","        total_feats = set(train[col].unique())|set(test[col].unique())\n","        common_feats = set(train[col].unique())&set(test[col].unique())\n","        missing_in_both = total_feats-common_feats\n","        train[col] = np.where(train[col].isin(missing_in_both),0,train[col])\n","        test[col] = np.where(test[col].isin(missing_in_both),0,test[col])"]},{"cell_type":"code","execution_count":13,"id":"d997a627","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:46:41.799391Z","iopub.status.busy":"2024-07-27T06:46:41.798974Z","iopub.status.idle":"2024-07-27T06:47:15.741624Z","shell.execute_reply":"2024-07-27T06:47:15.740761Z"},"papermill":{"duration":33.954474,"end_time":"2024-07-27T06:47:15.744026","exception":false,"start_time":"2024-07-27T06:46:41.789552","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.preprocessing import LabelEncoder\n","# train = pd.get_dummies(train,columns = ['Region_Code'])\n","y = train['Response']\n","train = train.drop(\"Response\", axis = 1)\n","lb = LabelEncoder()\n","cat_cols = [i for i in train.columns if train[i].dtypes=='object' or train[i].dtypes == bool]\n","for i in cat_cols:\n","    lb = lb.fit(train[i])\n","    train[i] = lb.transform(train[i])\n","    test[i] = lb.transform(test[i])"]},{"cell_type":"code","execution_count":14,"id":"563344f1","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:15.76258Z","iopub.status.busy":"2024-07-27T06:47:15.762296Z","iopub.status.idle":"2024-07-27T06:47:16.53509Z","shell.execute_reply":"2024-07-27T06:47:16.534113Z"},"papermill":{"duration":0.784357,"end_time":"2024-07-27T06:47:16.537235","exception":false,"start_time":"2024-07-27T06:47:15.752878","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Memory usage of dataframe is 702.20 MB\n","Memory usage after optimization is: 142.63 MB\n","Decreased by 79.7%\n","Memory usage of dataframe is 468.13 MB\n","Memory usage after optimization is: 95.09 MB\n","Decreased by 79.7%\n"]}],"source":["train = reduce_mem_usage(train)\n","test = reduce_mem_usage(test)"]},{"cell_type":"code","execution_count":15,"id":"a3993c03","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:16.556189Z","iopub.status.busy":"2024-07-27T06:47:16.555897Z","iopub.status.idle":"2024-07-27T06:47:16.565561Z","shell.execute_reply":"2024-07-27T06:47:16.564432Z"},"papermill":{"duration":0.021107,"end_time":"2024-07-27T06:47:16.567472","exception":false,"start_time":"2024-07-27T06:47:16.546365","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11504798 entries, 0 to 11504797\n","Data columns (total 10 columns):\n"," #   Column                Dtype  \n","---  ------                -----  \n"," 0   Gender                int8   \n"," 1   Age                   int8   \n"," 2   Driving_License       int8   \n"," 3   Region_Code           int8   \n"," 4   Previously_Insured    int8   \n"," 5   Vehicle_Age           int8   \n"," 6   Vehicle_Damage        int8   \n"," 7   Annual_Premium        float16\n"," 8   Policy_Sales_Channel  float16\n"," 9   Vintage               int16  \n","dtypes: float16(2), int16(1), int8(7)\n","memory usage: 142.6 MB\n"]}],"source":["train.info()"]},{"cell_type":"code","execution_count":16,"id":"1ded0aa4","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:16.586108Z","iopub.status.busy":"2024-07-27T06:47:16.585835Z","iopub.status.idle":"2024-07-27T06:47:16.996993Z","shell.execute_reply":"2024-07-27T06:47:16.995983Z"},"papermill":{"duration":0.423248,"end_time":"2024-07-27T06:47:16.999387","exception":false,"start_time":"2024-07-27T06:47:16.576139","status":"completed"},"tags":[]},"outputs":[],"source":["x = train\n","y = lb.fit_transform(y)"]},{"cell_type":"code","execution_count":17,"id":"5181251b","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:17.018708Z","iopub.status.busy":"2024-07-27T06:47:17.018388Z","iopub.status.idle":"2024-07-27T06:47:18.633091Z","shell.execute_reply":"2024-07-27T06:47:18.632071Z"},"papermill":{"duration":1.626915,"end_time":"2024-07-27T06:47:18.635495","exception":false,"start_time":"2024-07-27T06:47:17.00858","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","x = sc.fit_transform(x)"]},{"cell_type":"code","execution_count":18,"id":"e7ece3c6","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:18.654679Z","iopub.status.busy":"2024-07-27T06:47:18.654362Z","iopub.status.idle":"2024-07-27T06:47:18.893957Z","shell.execute_reply":"2024-07-27T06:47:18.893083Z"},"papermill":{"duration":0.251804,"end_time":"2024-07-27T06:47:18.896294","exception":false,"start_time":"2024-07-27T06:47:18.64449","status":"completed"},"tags":[]},"outputs":[],"source":["from xgboost import XGBClassifier"]},{"cell_type":"code","execution_count":19,"id":"ef251414","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:18.914842Z","iopub.status.busy":"2024-07-27T06:47:18.91456Z","iopub.status.idle":"2024-07-27T06:47:21.065279Z","shell.execute_reply":"2024-07-27T06:47:21.064249Z"},"papermill":{"duration":2.162544,"end_time":"2024-07-27T06:47:21.067679","exception":false,"start_time":"2024-07-27T06:47:18.905135","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = .2)"]},{"cell_type":"code","execution_count":20,"id":"3f67fa47","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:47:21.087649Z","iopub.status.busy":"2024-07-27T06:47:21.087098Z","iopub.status.idle":"2024-07-27T06:50:47.729847Z","shell.execute_reply":"2024-07-27T06:50:47.728975Z"},"papermill":{"duration":206.65506,"end_time":"2024-07-27T06:50:47.732346","exception":false,"start_time":"2024-07-27T06:47:21.077286","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/xgboost/core.py:160: UserWarning: [06:48:03] WARNING: /workspace/src/common/error_msg.cc:58: Falling back to prediction using DMatrix due to mismatched devices. This might lead to higher memory usage and slower performance. XGBoost is running on: cuda:0, while the input data is on: cpu.\n","Potential solutions:\n","- Use a data structure that matches the device ordinal in the booster.\n","- Set the device for booster before call to inplace_predict.\n","\n","This warning will only be shown once.\n","\n","  warnings.warn(smsg, UserWarning)\n"]}],"source":["xg = XGBClassifier(n_estimators = 700,random_state = 4,device=\"cuda\",scale_pos_weight=7.13)\n","from sklearn.model_selection import cross_validate\n","c = cross_validate(xg, x, y, cv=5, scoring = 'roc_auc',return_estimator = True)\n","# xg.fit(x_train,y_train)"]},{"cell_type":"code","execution_count":21,"id":"75b14e29","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:47.751714Z","iopub.status.busy":"2024-07-27T06:50:47.751416Z","iopub.status.idle":"2024-07-27T06:50:47.757072Z","shell.execute_reply":"2024-07-27T06:50:47.756241Z"},"papermill":{"duration":0.017454,"end_time":"2024-07-27T06:50:47.759046","exception":false,"start_time":"2024-07-27T06:50:47.741592","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["dict_keys(['fit_time', 'score_time', 'estimator', 'test_score'])"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["c.keys()"]},{"cell_type":"code","execution_count":22,"id":"f40ff362","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:47.777677Z","iopub.status.busy":"2024-07-27T06:50:47.777403Z","iopub.status.idle":"2024-07-27T06:50:47.782898Z","shell.execute_reply":"2024-07-27T06:50:47.782075Z"},"papermill":{"duration":0.017034,"end_time":"2024-07-27T06:50:47.784836","exception":false,"start_time":"2024-07-27T06:50:47.767802","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([0.87600954, 0.87592171, 0.87644295, 0.87638692, 0.87658713])"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["c['test_score']"]},{"cell_type":"code","execution_count":23,"id":"083e6e1e","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:47.804219Z","iopub.status.busy":"2024-07-27T06:50:47.803509Z","iopub.status.idle":"2024-07-27T06:50:47.807165Z","shell.execute_reply":"2024-07-27T06:50:47.806367Z"},"papermill":{"duration":0.015193,"end_time":"2024-07-27T06:50:47.809001","exception":false,"start_time":"2024-07-27T06:50:47.793808","status":"completed"},"tags":[]},"outputs":[],"source":["# from sklearn.metrics import roc_auc_score\n","# roc_auc_score(y_test,pr)"]},{"cell_type":"code","execution_count":24,"id":"5221b090","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:47.827953Z","iopub.status.busy":"2024-07-27T06:50:47.827701Z","iopub.status.idle":"2024-07-27T06:50:48.294295Z","shell.execute_reply":"2024-07-27T06:50:48.293223Z"},"papermill":{"duration":0.478733,"end_time":"2024-07-27T06:50:48.296618","exception":false,"start_time":"2024-07-27T06:50:47.817885","status":"completed"},"tags":[]},"outputs":[],"source":["test = sc.transform(test)"]},{"cell_type":"code","execution_count":25,"id":"b1e1af3e","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:48.31665Z","iopub.status.busy":"2024-07-27T06:50:48.316362Z","iopub.status.idle":"2024-07-27T06:50:50.737086Z","shell.execute_reply":"2024-07-27T06:50:50.73631Z"},"papermill":{"duration":2.432934,"end_time":"2024-07-27T06:50:50.739387","exception":false,"start_time":"2024-07-27T06:50:48.306453","status":"completed"},"tags":[]},"outputs":[],"source":["out = c['estimator'][-1].predict(test)"]},{"cell_type":"code","execution_count":26,"id":"bbe63182","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:50.759593Z","iopub.status.busy":"2024-07-27T06:50:50.759282Z","iopub.status.idle":"2024-07-27T06:50:53.100649Z","shell.execute_reply":"2024-07-27T06:50:53.09977Z"},"papermill":{"duration":2.354114,"end_time":"2024-07-27T06:50:53.102878","exception":false,"start_time":"2024-07-27T06:50:50.748764","status":"completed"},"tags":[]},"outputs":[],"source":["sub = pd.read_csv(\"/kaggle/input/playground-series-s4e7/sample_submission.csv\")"]},{"cell_type":"code","execution_count":27,"id":"fc4a0fc8","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:53.123022Z","iopub.status.busy":"2024-07-27T06:50:53.122711Z","iopub.status.idle":"2024-07-27T06:50:53.148907Z","shell.execute_reply":"2024-07-27T06:50:53.148136Z"},"papermill":{"duration":0.038677,"end_time":"2024-07-27T06:50:53.151063","exception":false,"start_time":"2024-07-27T06:50:53.112386","status":"completed"},"tags":[]},"outputs":[],"source":["sub['Response'] = out"]},{"cell_type":"code","execution_count":28,"id":"56fb03be","metadata":{"execution":{"iopub.execute_input":"2024-07-27T06:50:53.170685Z","iopub.status.busy":"2024-07-27T06:50:53.170103Z","iopub.status.idle":"2024-07-27T06:51:02.321006Z","shell.execute_reply":"2024-07-27T06:51:02.320026Z"},"papermill":{"duration":9.163044,"end_time":"2024-07-27T06:51:02.323307","exception":false,"start_time":"2024-07-27T06:50:53.160263","status":"completed"},"tags":[]},"outputs":[],"source":["sub.to_csv(\"submission.csv\", index = False)"]},{"cell_type":"code","execution_count":null,"id":"0a140077","metadata":{"papermill":{"duration":0.009221,"end_time":"2024-07-27T06:51:02.34214","exception":false,"start_time":"2024-07-27T06:51:02.332919","status":"completed"},"tags":[]},"outputs":[],"source":[]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"databundleVersionId":8930475,"sourceId":73291,"sourceType":"competition"}],"dockerImageVersionId":30732,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":333.168866,"end_time":"2024-07-27T06:51:02.970841","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-07-27T06:45:29.801975","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}