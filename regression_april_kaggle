{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":72489,"databundleVersionId":8096274,"sourceType":"competition"}],"dockerImageVersionId":30684,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/srsses/regression-april?scriptVersionId=171927438\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-14T07:30:00.779104Z","iopub.execute_input":"2024-04-14T07:30:00.779622Z","iopub.status.idle":"2024-04-14T07:30:01.93723Z","shell.execute_reply.started":"2024-04-14T07:30:00.779559Z","shell.execute_reply":"2024-04-14T07:30:01.93606Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/playground-series-s4e4/train.csv\")\ntest = pd.read_csv(\"/kaggle/input/playground-series-s4e4/test.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:01.939413Z","iopub.execute_input":"2024-04-14T07:30:01.93991Z","iopub.status.idle":"2024-04-14T07:30:02.250672Z","shell.execute_reply.started":"2024-04-14T07:30:01.939879Z","shell.execute_reply":"2024-04-14T07:30:02.249636Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:02.25644Z","iopub.execute_input":"2024-04-14T07:30:02.256782Z","iopub.status.idle":"2024-04-14T07:30:02.281802Z","shell.execute_reply.started":"2024-04-14T07:30:02.256754Z","shell.execute_reply":"2024-04-14T07:30:02.280744Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:02.283164Z","iopub.execute_input":"2024-04-14T07:30:02.283461Z","iopub.status.idle":"2024-04-14T07:30:02.359432Z","shell.execute_reply.started":"2024-04-14T07:30:02.283437Z","shell.execute_reply":"2024-04-14T07:30:02.35831Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dropped_id = train.drop(['id','Diameter','Whole weight'], axis = 1)\ntest_dropped = test.drop(['id','Diameter','Whole weight'], axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:02.361032Z","iopub.execute_input":"2024-04-14T07:30:02.361422Z","iopub.status.idle":"2024-04-14T07:30:02.380148Z","shell.execute_reply.started":"2024-04-14T07:30:02.361387Z","shell.execute_reply":"2024-04-14T07:30:02.379065Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dropped_id.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:02.381504Z","iopub.execute_input":"2024-04-14T07:30:02.381895Z","iopub.status.idle":"2024-04-14T07:30:02.408575Z","shell.execute_reply.started":"2024-04-14T07:30:02.381861Z","shell.execute_reply":"2024-04-14T07:30:02.407547Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# load statmodels functions\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom statsmodels.tools.tools import add_constant\n\n# compute the vif for all given features\ndef compute_vif(considered_features):\n    \n    X = train_dropped_id[considered_features]\n    # the calculation of variance inflation requires a constant\n    X['intercept'] = 1\n    \n    # create dataframe to store vif values\n    vif = pd.DataFrame()\n    vif[\"Variable\"] = X.columns\n    vif[\"VIF\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n    vif = vif[vif['Variable']!='intercept']\n    return vif","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:02.409984Z","iopub.execute_input":"2024-04-14T07:30:02.410292Z","iopub.status.idle":"2024-04-14T07:30:03.786326Z","shell.execute_reply.started":"2024-04-14T07:30:02.410265Z","shell.execute_reply":"2024-04-14T07:30:03.785404Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cols = train_dropped_id.drop(['Rings','Sex'], axis = 1).columns","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:03.787626Z","iopub.execute_input":"2024-04-14T07:30:03.787918Z","iopub.status.idle":"2024-04-14T07:30:03.79617Z","shell.execute_reply.started":"2024-04-14T07:30:03.787892Z","shell.execute_reply":"2024-04-14T07:30:03.795112Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\ncompute_vif(cols)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:03.799839Z","iopub.execute_input":"2024-04-14T07:30:03.800297Z","iopub.status.idle":"2024-04-14T07:30:04.086695Z","shell.execute_reply.started":"2024-04-14T07:30:03.80026Z","shell.execute_reply":"2024-04-14T07:30:04.085635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in train_dropped_id.columns:\n    if train_dropped_id[i].dtype == 'float64':\n        train_dropped_id[i].plot.box()\n        plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:04.088284Z","iopub.execute_input":"2024-04-14T07:30:04.088909Z","iopub.status.idle":"2024-04-14T07:30:05.119081Z","shell.execute_reply.started":"2024-04-14T07:30:04.088868Z","shell.execute_reply":"2024-04-14T07:30:05.118056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def clear_outliers(df,col):\n    q1 = np.percentile(df[col],25)\n    q3 = np.percentile(df[col],75)\n    IQR = q3-q1\n    df[col] = np.where(df[col]<(q1-(IQR*1.5)),q1,np.where(df[col]>(q3+(IQR*1.5)),q3,df[col]))","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:05.120269Z","iopub.execute_input":"2024-04-14T07:30:05.120549Z","iopub.status.idle":"2024-04-14T07:30:05.126624Z","shell.execute_reply.started":"2024-04-14T07:30:05.120525Z","shell.execute_reply":"2024-04-14T07:30:05.125646Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in train_dropped_id.columns:\n    if train_dropped_id[i].dtype == 'float64':\n        train_dropped_id[i] = np.sqrt(train_dropped_id[i])\n        plt.show()\n        \nfor i in test_dropped.columns:\n    if test_dropped[i].dtype == 'float64':\n        test_dropped[i] = np.sqrt(test_dropped[i])\n        plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:05.127985Z","iopub.execute_input":"2024-04-14T07:30:05.128366Z","iopub.status.idle":"2024-04-14T07:30:05.153232Z","shell.execute_reply.started":"2024-04-14T07:30:05.128331Z","shell.execute_reply":"2024-04-14T07:30:05.152047Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in train_dropped_id.columns:\n    if train_dropped_id[i].dtype == 'float64':\n        clear_outliers(train_dropped_id,i)\nfor i in test_dropped.columns:\n    if test_dropped[i].dtype == 'float64':\n        clear_outliers(test_dropped,i)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:05.154411Z","iopub.execute_input":"2024-04-14T07:30:05.154898Z","iopub.status.idle":"2024-04-14T07:30:05.19953Z","shell.execute_reply.started":"2024-04-14T07:30:05.15485Z","shell.execute_reply":"2024-04-14T07:30:05.198598Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in train_dropped_id.columns:\n    if train_dropped_id[i].dtype == 'float64':\n        train_dropped_id[i].plot.box()\n        plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:05.200899Z","iopub.execute_input":"2024-04-14T07:30:05.201221Z","iopub.status.idle":"2024-04-14T07:30:06.070894Z","shell.execute_reply.started":"2024-04-14T07:30:05.201195Z","shell.execute_reply":"2024-04-14T07:30:06.069815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# import seaborn as sns\n# sns.pairplot(train_dropped_id)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.072208Z","iopub.execute_input":"2024-04-14T07:30:06.072527Z","iopub.status.idle":"2024-04-14T07:30:06.076485Z","shell.execute_reply.started":"2024-04-14T07:30:06.072499Z","shell.execute_reply":"2024-04-14T07:30:06.075622Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dropped_id.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.07802Z","iopub.execute_input":"2024-04-14T07:30:06.07871Z","iopub.status.idle":"2024-04-14T07:30:06.095536Z","shell.execute_reply.started":"2024-04-14T07:30:06.078666Z","shell.execute_reply":"2024-04-14T07:30:06.094264Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler, LabelEncoder\nle = LabelEncoder()\ns = StandardScaler()\n\nfor i in train_dropped_id.drop('Rings', axis = 1).columns:\n    if train_dropped_id[i].dtype != 'float64':\n        train_dropped_id[i] = le.fit_transform(train_dropped_id[[i]])\n    else:\n        train_dropped_id[i] = s.fit_transform(train_dropped_id[[i]])\n        \n        \nfor i in test_dropped.columns:\n    if test_dropped[i].dtype != 'float64':\n        test_dropped[i] = le.fit_transform(test_dropped[[i]])\n    else:\n        test_dropped[i] = s.fit_transform(test_dropped[[i]])","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.097835Z","iopub.execute_input":"2024-04-14T07:30:06.098803Z","iopub.status.idle":"2024-04-14T07:30:06.378195Z","shell.execute_reply.started":"2024-04-14T07:30:06.098765Z","shell.execute_reply":"2024-04-14T07:30:06.377022Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dropped_id.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.379883Z","iopub.execute_input":"2024-04-14T07:30:06.380284Z","iopub.status.idle":"2024-04-14T07:30:06.39537Z","shell.execute_reply.started":"2024-04-14T07:30:06.380246Z","shell.execute_reply":"2024-04-14T07:30:06.394002Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_dropped.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.397065Z","iopub.execute_input":"2024-04-14T07:30:06.397623Z","iopub.status.idle":"2024-04-14T07:30:06.418399Z","shell.execute_reply.started":"2024-04-14T07:30:06.39756Z","shell.execute_reply":"2024-04-14T07:30:06.417308Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import  LinearRegression,TweedieRegressor, BayesianRidge\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import ExtraTreesRegressor","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.4199Z","iopub.execute_input":"2024-04-14T07:30:06.420337Z","iopub.status.idle":"2024-04-14T07:30:06.752059Z","shell.execute_reply.started":"2024-04-14T07:30:06.420308Z","shell.execute_reply":"2024-04-14T07:30:06.750927Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x_train,x_test,y_train,y_test= train_test_split(train_dropped_id.drop('Rings', axis = 1),train_dropped_id['Rings'], test_size = 0.2, random_state = 2)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.753683Z","iopub.execute_input":"2024-04-14T07:30:06.754017Z","iopub.status.idle":"2024-04-14T07:30:06.791573Z","shell.execute_reply.started":"2024-04-14T07:30:06.75399Z","shell.execute_reply":"2024-04-14T07:30:06.790486Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from xgboost import XGBRegressor\nlr = LinearRegression()\nby = BayesianRidge()\nXTR = ExtraTreesRegressor(\n    criterion='friedman_mse',\n    n_estimators=300,\n    max_depth=17,\n    random_state=61)\n# xgb = XGBRegressor(n_estimators = 100)\nlr = XTR.fit(x_train, y_train)\npred = lr.predict(x_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:06.792918Z","iopub.execute_input":"2024-04-14T07:30:06.793237Z","iopub.status.idle":"2024-04-14T07:30:31.744604Z","shell.execute_reply.started":"2024-04-14T07:30:06.793212Z","shell.execute_reply":"2024-04-14T07:30:31.743469Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def err_f(true, pred):\n    pred = np.log(1+pred)\n    true = np.log(1+true)\n    return np.sqrt(np.sum((pred-true)**2)/x_test.shape[0])","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:31.746258Z","iopub.execute_input":"2024-04-14T07:30:31.746604Z","iopub.status.idle":"2024-04-14T07:30:31.751948Z","shell.execute_reply.started":"2024-04-14T07:30:31.746561Z","shell.execute_reply":"2024-04-14T07:30:31.750928Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"err_f(y_test,pred)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:31.75337Z","iopub.execute_input":"2024-04-14T07:30:31.753778Z","iopub.status.idle":"2024-04-14T07:30:31.773644Z","shell.execute_reply.started":"2024-04-14T07:30:31.753709Z","shell.execute_reply":"2024-04-14T07:30:31.772651Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pred = lr.predict(test_dropped)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:31.774639Z","iopub.execute_input":"2024-04-14T07:30:31.774948Z","iopub.status.idle":"2024-04-14T07:30:35.707001Z","shell.execute_reply.started":"2024-04-14T07:30:31.774922Z","shell.execute_reply":"2024-04-14T07:30:35.705901Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sub = pd.read_csv(\"/kaggle/input/playground-series-s4e4/sample_submission.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:35.708282Z","iopub.execute_input":"2024-04-14T07:30:35.708726Z","iopub.status.idle":"2024-04-14T07:30:35.744077Z","shell.execute_reply.started":"2024-04-14T07:30:35.708687Z","shell.execute_reply":"2024-04-14T07:30:35.743002Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sub.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:35.748402Z","iopub.execute_input":"2024-04-14T07:30:35.748767Z","iopub.status.idle":"2024-04-14T07:30:35.753606Z","shell.execute_reply.started":"2024-04-14T07:30:35.748738Z","shell.execute_reply":"2024-04-14T07:30:35.752442Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sub['Rings'] = abs(pred)\nsub.to_csv(\"submission.csv\",index = False)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T07:30:35.755142Z","iopub.execute_input":"2024-04-14T07:30:35.755484Z","iopub.status.idle":"2024-04-14T07:30:35.920775Z","shell.execute_reply.started":"2024-04-14T07:30:35.755443Z","shell.execute_reply":"2024-04-14T07:30:35.919825Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}